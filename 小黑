
智能合约改进
我们如何改进智能契约基础设施

该协议允许对智能契约代码进行自动安全检查，并以一种不信任的方式进行检查。我们的方法提供了以下两个核心优势。

1。该协议允许终端用户直接提交程序进行验证，而不可能通过操纵审核结果的坏参与者。

想象一下，一家安全审计公司的一名不佳的演员，可以让数百万美元的漏洞溜过，然后利用现场部署的合同。基于经济主导的战略，定量协议所要求的共识降低了坏参与者的影响，试图操纵结果的代价太大了。经过验证的智能契约是由审核的散列生成的，其中包括验证器使用的安全库的版本，基于共识的纯文本报告发布。在未来，我们计划与第三方合作提供智能合同保险，以进一步降低使用智能合同的风险。
2。我们通过认证和认证智能合同来激励矿商在以太坊进行验证节点软件

在区块链架构中,“矿工”参与实体事务添加到链。在quant图章协议中，矿工被称为“验证者”。验证器需要运行验证节点软件，该软件可以在quant图章验证智能契约上监视更新。执行服务的费用使验证人诚实。验证合同的验证人会产生一种验证式的哈希，反过来，验证人也会获得象征性的费用。如果一个验证人发现违反了合同的安全目标，他/他就会产生一个反例，这是对违规行为的证人，而第三方托管智能合同向验证方支付了赏金。开发人员在找到漏洞时负责处理漏洞，但是现在，他们可以在涉及到真正的利害关系之前解决这些漏洞。

我们如何改进开发人员的流程

出于好意的软件开发人员需要帮助来生成更好的代码。Luu等。指出,有一个语义鸿沟植根于theblockchain代码执行的误解;因此，迫切需要更好的工具，可以帮助开发人员在部署之前捕获漏洞。目前开发人员测试代码的方式——手动地通过开源代码评审和单元测试(如果他们是勤奋的)——是不足以满足区块链技术的需求的，这种技术在理想情况下提供了完美的安全性。以上所有方法都是非常手工的方法，允许人为错误。我们需要一个简单的过程来验证聪明的合同，同时尽可能减少严重漏洞的可能性。quant集邮协议提供了这个简单的接口，同时也通过在区块链上证明他们执行了这个审计，从而保护了开发者的声誉。

Quantstamp示例

假设一个开发人员计划在以太坊上部署一份可靠的合同。在编写访问货币系统的代码时，存在很大的风险，开发人员必须小心确保没有因漏洞而丢失的资金。为了最小化风险，开发人员通过quant邮票Ethereum智能契约直接从他的钱包、数据字段的源代码和发送QSP标记来提交安全审计的代码。根据程序的安全需求，开发人员可以决定发送多少赏金。然后，智能契约接收请求，然后在下一个Ethereum块验证节点执行一组安全检查，以验证智能契约。在一致的情况下，将验证和报告数据添加到下一个以太坊，并附带适当的令牌支付。报告将基于严重系统的问题分类为1-10;l是一个很小的警告，10是一个主要的弱点。从这一点开始，如果一个严重的漏洞没有立即被检测到，那么赏金就会一直存在，直到指定的时间已经过去。在这段时间结束时，将返回给请求审计的开发人员。在请求审计时，开发人员选择公开或私有的安全报告。私人报告使用智能契约的公钥加密，可以由所有者/开发人员解密。开发人员和公众可以访问一个名为qsscan的web门户。io检查任何安全报告。门户通过quant图章智能契约对事务数据字段中的信息进行解析，并显示它。通过使用审核的散列，公众看到的安全报告与经过审计的源代码完全匹配，以防止对报告结果的操作。

在发布公共审计之前，开发人员可以在本地机器上执行安全审计，但是可能发现计算开销过高。与普通的开发人员机器相比，在内存和处理核心方面，量子戳验证器节点的计算能力可能更强。同样，通过将人类黑客的强大力量聚集在一起，这个项目能够大大超过标准代码审查的覆盖范围。一旦代码准备好进行部署，开发人员最终会产生一个公共安全报告，以便让用户放心地执行一个分散的安全审计。

当安全报告识别出在智能合同中发现的问题时，开发人员可以公开注释qsscan。io和反馈。这使开发人员能够在报告中标记假阳性，社区可以验证注释。

quant集邮并不能保证完美的源代码，但是通过使用自动化和众包方法，可以确保代码是安全的。

quant图章团队致力于不断地进行研究和开发，定期对安全库进行改进。当有新版本发布时，开发人员可以重新审核他们的智能契约，展示他们对保护代码和增强公众信心的承诺。
非开发人员将对项目有更多的信心，因为他们可以看到聪明的合同开发人员是否已经对他们的代码进行了审计，以及对哪个版本进行了审计。
